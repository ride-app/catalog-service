syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/type/latlng.proto";
import "buf/validate/validate.proto";

package ride.catalog.v1alpha1;

option go_package = "github.com/ride-app/catalog-service/api/ride/catalog/v1alpha1";

// Generated according to https://cloud.google.com/apis/design/standard_methods
service CatalogService {
  rpc SearchPlaces(SearchPlacesRequest) returns (SearchPlacesResponse) {
    option (google.api.http) = {
      get : "/v1alpha1/{name=places/*}:search"
    };
  }

  rpc GetRoute(GetRouteRequest) returns (GetRouteResponse) {
    option (google.api.http) = {
      get : "/v1alpha1/route"
    };
  }

  rpc GetCatalog(GetCatalogRequest) returns (GetCatalogResponse) {
    option (google.api.http) = {
      get : "/v1alpha1/catalog"
    };
  }
}

message Place {
  string name = 1;
  string display_name = 2;
  string address = 3;
  google.type.LatLng location = 4;
  Type type = 5;

  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_PICKUP = 1;
    TYPE_DROPOFF = 2;
  }
}

message SearchPlacesRequest {
  // The field will contain name of the resource requested.
  string query = 1;

  optional google.type.LatLng location = 2;

  optional string session_token = 3;
}

message SearchPlacesResponse {
  string session_token = 1;

  repeated Place places = 2;
}

message Route {
  google.type.LatLng pickup = 1;
  google.type.LatLng dropoff = 2;
  string polyline = 3;
  int32 distance_meters = 4;
  int32 eta_seconds = 5;
}

message GetRouteRequest {}

message GetRouteResponse {}

message Catalog {
  repeated Option options = 1;

  // Output only. Timestamp when the Catalog was created.
  google.protobuf.Timestamp create_time = 4;

  message Option {
    string display_name = 1;
    string description = 2;
    string photo_uri = 3;
    Fare fare = 4;
    string vehicle_type = 5;
    string trip_type = 6;
    repeated PaymentMethod payment_methods = 7;

    message Fare {
      float total = 1;
      map<string, float> components = 2;
      optional string description = 3;
    }

    enum PaymentMethod {
      PAYMENT_METHOD_UNSPECIFIED = 0;
      PAYMENT_METHOD_CASH = 1;
      PAYMENT_METHOD_WALLET = 2;
    }
  }
}

message GetCatalogRequest {
  // The field will contain name of the resource requested.
  Route route = 1;
}

message GetCatalogResponse {
  // The field name should match the noun "Catalog" in the method name.
  Catalog catalog = 1;
}